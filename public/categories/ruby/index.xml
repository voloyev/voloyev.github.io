<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ruby on Notes</title>
    <link>https://voloyev.github.io/categories/ruby/</link>
    <description>Recent content in ruby on Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Oct 2019 20:32:00 +0200</lastBuildDate><atom:link href="https://voloyev.github.io/categories/ruby/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Tap and then methods in ruby</title>
      <link>https://voloyev.github.io/posts/2020-10-25-ruby-then-and-tap-methods/</link>
      <pubDate>Fri, 25 Oct 2019 20:32:00 +0200</pubDate>
      
      <guid>https://voloyev.github.io/posts/2020-10-25-ruby-then-and-tap-methods/</guid>
      <description>In nutshell #then return result of a block and #tap returns self
class Person def initialize(name:, email:) @name = name @email = email end attr_accessor :name, :email end Person.new(name: &amp;#34;Bob&amp;#34;, email: &amp;#34;bob@example.com&amp;#34;) .then {|person| EmailTemplate.for(person.name, person.email)} .then {|template| Email.notify(template)} bob_for_tap = Person.new( name: &amp;#34;Bob for Tap&amp;#34;, email: &amp;#34;bob_for_tap@example.com&amp;#34; ) .tap {|persone| Verificator(person)} # so at the end of block we return instance of Person </description>
    </item>
    
    <item>
      <title>Build ruby 2.3.3 in 2018</title>
      <link>https://voloyev.github.io/posts/2018-06-02-build-ruby-2.3.3-in-2018/</link>
      <pubDate>Sat, 02 Jun 2018 21:12:00 +0200</pubDate>
      
      <guid>https://voloyev.github.io/posts/2018-06-02-build-ruby-2.3.3-in-2018/</guid>
      <description>I have builded ruby 2.3.3 with ruby-build.
You have to install openssl-1.0
In arch you can it like this:
$ sudo pacman -S openssl-1.0 # it will be here usr/lib/openssl-1.0/
than
$ PKG_CONFIG_PATH=/usr/lib/openssl-1.0/pkgconfig/:/usr/lib/pkgconfig/ RUBY_CONFIGURE_OPTS=--with-openssl-dir=/usr/lib/openssl-1.0/ rbenv install 2.3.3</description>
    </item>
    
    <item>
      <title>Ruby benchmarks</title>
      <link>https://voloyev.github.io/posts/2018-05-07-some-ruby-benchmarks/</link>
      <pubDate>Mon, 07 May 2018 14:13:00 +0200</pubDate>
      
      <guid>https://voloyev.github.io/posts/2018-05-07-some-ruby-benchmarks/</guid>
      <description>Loops and recursion: require &amp;#39;benchmark/ips&amp;#39; RubyVM::InstructionSequence.compile_option = { tailcall_optimization: true, trace_instruction: false } def rec_fact(n) return 1 if n &amp;lt;= 1 n * rec_fact(n-1) end def tail_fact(n, acc=1) return acc if n &amp;lt;= 1 tail_fact(n-1, n*acc) end def each_fact(n) total = 1 (1..n).each do |n| total *= n end total end def inject_fact(n) (1..n).inject(1, :*) end def forin_fact(n) raise InvalidArgument, &amp;#34;negative input given&amp;#34; if n &amp;lt; 0 result = 1 for i in (1.</description>
    </item>
    
    <item>
      <title>Equgilibrium index</title>
      <link>https://voloyev.github.io/posts/2017-05-10-equilibrium-index/</link>
      <pubDate>Wed, 10 May 2017 23:22:00 +0200</pubDate>
      
      <guid>https://voloyev.github.io/posts/2017-05-10-equilibrium-index/</guid>
      <description>def equilib(list) left, right = 0, list.reduce(:+) equilib_list = [] list.each_with_index do |val, i| right -= val # puts i.to_s + &amp;#39; :&amp;#39; +val.to_s if right == left equilib_list &amp;lt;&amp;lt; i if left == right left += val end return -1 if equilib_list.empty? equilib_list[0] end p equilib([-1, 3, -4, 5, 1, -6, 2, 1]) ruby whith while def eq(arr) right = arr.reduce(:+) # sum of all elements in array left = 0 i = 0 while i &amp;lt; arr.</description>
    </item>
    
    <item>
      <title>About variables in ruby</title>
      <link>https://voloyev.github.io/posts/2017-02-11-ruby-variables/</link>
      <pubDate>Sat, 11 Feb 2017 13:11:00 +0200</pubDate>
      
      <guid>https://voloyev.github.io/posts/2017-02-11-ruby-variables/</guid>
      <description># Local v = &amp;#34;Ruby&amp;#34; # =&amp;gt; &amp;#34;Ruby&amp;#34; v.class # =&amp;gt; String v.kind_of? String # =&amp;gt; true defined? v # =&amp;gt; &amp;#34;local-variable&amp;#34; # Instance @i = &amp;#34;Ruby&amp;#34; # =&amp;gt; &amp;#34;Ruby&amp;#34; defined? @i # =&amp;gt; &amp;#34;instance-variable&amp;#34; # Global $g = &amp;#34;Ruby&amp;#34; # =&amp;gt; &amp;#34;Ruby&amp;#34; defined? $g # =&amp;gt; &amp;#34;global-variable&amp;#34; # Constant C = &amp;#34;Ruby&amp;#34; # =&amp;gt; &amp;#34;Ruby&amp;#34; defined? C # =&amp;gt; &amp;#34;constant&amp;#34; </description>
    </item>
    
  </channel>
</rss>
